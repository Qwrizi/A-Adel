import numpy as np
def find_initial_solution(costs, supply, demand):
    num_rows, num_cols = len(supply), len(demand)
    plan = np.zeros((num_rows, num_cols))
    cost_matrix = np.array(costs)
    supply_indices = list(range(num_rows))
    demand_indices = list(range(num_cols))
    while len(supply_indices) > 0 and len(demand_indices) > 0:
        min_cost_index = np.unravel_index(np.argmin(cost_matrix[supply_indices][:, demand_indices]), 
                                           cost_matrix[supply_indices][:, demand_indices].shape)
        row, col = supply_indices[min_cost_index[0]], demand_indices[min_cost_index[1]]
        shipment = min(supply[row], demand[col])
        plan[row][col] = shipment
        supply[row] -= shipment
        demand[col] -= shipment
        if supply[row] == 0:
            supply_indices.remove(row)
        if demand[col] == 0:
            demand_indices.remove(col)

    return plan
costs = [
    [500, 1000, 900],
    [600, 1100, 1000],
    [400, 1000, 900]
]

supply = [1000, 1500, 700]
demand = [1200, 1000, 1000]

initial_plan = find_initial_solution(costs, supply, demand)
print("Опорный план:")
print(initial_plan)

